#!/bin/bash

# Script to install MESA Wildfire software unto a vinilla Ubuntu machine

#set -x

HERE=$(readlink -f `dirname $0`)
MESA_ROOT=$(readlink -f $HERE/..)

export DEBIAN_FRONTEND=noninteractive

# Customize settings
cp $MESA_ROOT/admin/ENV.example $MESA_ROOT/admin/ENV
read -p "Press [Enter] key to open the editor"
nano $MESA_ROOT/admin/ENV

apt-get install -y pwgen

# need VOLUMES from ENV
source $MESA_ROOT/admin/ENV
mkdir -p $VOLUMES

if [ -z "$QUICK" ]; then
  # General
  apt-get update
  apt-get upgrade -y
  apt-get install -y git nano vi
  apt-get install curl

  # Install Docker - https://docs.docker.com/installation/ubuntulinux/
  apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
  echo "deb https://apt.dockerproject.org/repo ubuntu-trusty main" >> /etc/apt/sources.list.d/docker.list
  apt-get update
  apt-get purge -y lxc-docker*
  apt-cache policy docker-engine
  apt-get install -y docker-engine
fi

# Check docker
docker run hello-world
if [ "$?" != "0" ]; then
  echo "Docker is not properly installed!"
  exit 1
fi

# Install PostGIS
docker pull mesasadc/postgis:$BUILD_TAG
docker run -it --rm -v $VOLUMES/postgis:/var/lib/postgresql mesasadc/postgis:$BUILD_TAG bash -c 'chown postgres: /var/lib/postgresql && su postgres -c "/usr/lib/postgresql/9.4/bin/initdb -D /var/lib/postgresql/data"' # initialize data directory
#cp $HERE/pg_hba.conf $VOLUMES/postgis/9.4/main/  # allow login from any ip address

# Install Geoserver
docker pull mesasadc/geoserver:$BUILD_TAG

#Install RabbitMQ
docker pull mesasadc/rabbitmq-webstomp:$BUILD_TAG

# Install Nginx
docker pull mesasadc/nginx:$BUILD_TAG

# Install ingest scripts
apt-get install -y python-jinja2 incron python-kombu

# Install gsconfig scripts
apt-get install -y python-pip
pip install gsconfig

# Install supervisord
# See: http://serverfault.com/questions/96499/how-to-automatically-start-supervisord-on-linux-ubuntu
apt-get install -y supervisor
cp $HERE/supervisord/supervisor.conf /etc/supervisor/supervisor.conf
cp $HERE/supervisord/supervisor.init /etc/init.d/supervisor
sed "s|username.*=.*|username=$SUPERVISOR_USER|g" -i /etc/supervisor/supervisor.conf
sed "s|password.*=.*|password=$SUPERVISOR_PASS|g" -i /etc/supervisor/supervisor.conf

# Configure supervisor scripts
cd $HERE/supervisord
./update_conf

# Make supervisor start up on boot
update-rc.d supervisor defaults
service supervisor stop
service supervisor start
service supervisor status

# Install MESA Wildfire application
cd $MESA_ROOT/django_project
./build
./manage migrate --noinput

# Initialize MESA Viewer
cd $MESA_ROOT/mesa-viewer
./build
RUN_MODE=-it ./run env AFIS_VIEWER_INIT=1 python /tmp/django_project/manage.py syncdb --noinput
RUN_MODE=-it ./run env AFIS_VIEWER_INIT= python /tmp/django_project/manage.py syncdb --noinput
RUN_MODE=-it ./run env python /tmp/django_project/manage.py loaddata mesa_layers

# Make sure Geoserver is ready
docker run --link supervisor_geoserver --rm martin/wait

# Add GeoServer layers
mkdir -p $VOLUMES/geoserver_data/data/mesa
mkdir -p $VOLUMES/geoserver_data/data/mesa/user_shapefiles
cp -r $HERE/geoserver/mesa_shapefiles $VOLUMES/geoserver_data/data/mesa/
cp -r $HERE/geoserver/mesa_rasters $VOLUMES/geoserver_data/data/mesa/

cd $MESA_ROOT/admin/geoserver
python configure.py

# Restart dockers
service supervisor restart

# Install qgis
sudo apt-get install -y qgis python-qgis qgis-plugin-grass

# Configure crond to do housekeeping tasks etc
sudo cp $HERE/crontab /etc/cron.d/mesa

# Configure incrond to monitor incoming EUMETCast files
sudo cp $HERE/incrontab /etc/incron.d/mesa

