#!/bin/bash

#set -x

if [ "$INSIDE_DOCKER" = "" ]; then
    SCRIPT_DIR=$(readlink -f `dirname $0`)
    source $SCRIPT_DIR/ENV
    EXTENSION=$(echo $2 | cut -d'.' -f4-)
    if [[ $EXTENSION == 'lfdid.tif' ]]; then
        $SCRIPT_DIR/mesa_lfdi_wmst_add_mosaic_layer.sh $NAMEOFIMAGEMOSAIC $1/$2 $GEOSERVERURL $GEOSERVERWORKSPACE $GEOSERVERUSERNAME $GEOSERVERPASSWORD 
        
    else
        $SCRIPT_DIR/mesa_lfdi_wmst_add_mosaic_layer.sh $NAMEOFIMAGEMOSAICF $1/$2 $GEOSERVERURL $GEOSERVERWORKSPACE $GEOSERVERUSERNAME $GEOSERVERPASSWORD 
    fi
    docker exec -t supervisor_postgis bash -c "INSIDE_DOCKER=true /mnt/ingest/scripts/mesa_fdifwi /mnt/ingest/mesa_fdifwi $2 $3"
    exit
fi

SCRIPT_DIR=$(readlink -f `dirname $0`)
DB_NAME="gis"

INCRON_EVENT_DIR=$1
INCRON_EVENT_FILE=$2
INCRON_EVENT_FLAGS=$3

# Example: MESA_SADC_FDI_SAfri_v1.2016-02-01T1200Z.2016-02-01T1200Z.lfdid.tif

# Use Python's regex module. Regex created using https://regex101.com/#python
PARAMS=( $(python -c \
"import sys,re; \
match = re.match(r'.*(?P<target_datetime>.{16})(?<=Z)\.(?P<datetime>.{16})(?<=Z)\.(?P<product>.*(?=\.)).*', sys.argv[1]); \
print ' '.join(match.groups()) \
" $INCRON_EVENT_FILE ) \
)

DATETIME_TARGET=${PARAMS[0]}
DATETIME=${PARAMS[1]}
PRODUCT=${PARAMS[2]}

SQL="CREATE TABLE IF NOT EXISTS \"lfdi_fwi_raster\" ( \
    \"rid\" serial PRIMARY KEY, \
    \"datetime\" timestamp without time zone, \
    \"target_datetime\" timestamp without time zone, \
    \"product\" character varying, \
    \"rasterfile\" character varying, \
    \"rast\" raster\
  );"

TERM=xterm

echo $SQL | su -c "psql $DB_NAME" postgres

raster2pgsql -I -R -a -e $INCRON_EVENT_DIR/$INCRON_EVENT_FILE lfdi_fwi_raster | $SCRIPT_DIR/pginsert-customize.py datetime "'$DATETIME'::timestamp without time zone" target_datetime "'$DATETIME_TARGET'::timestamp" product "'$PRODUCT'" rasterfile "'$INCRON_EVENT_DIR/$INCRON_EVENT_FILE'" | su -c "psql $DB_NAME" postgres


